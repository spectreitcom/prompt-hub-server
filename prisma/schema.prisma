// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// PromptHub Module

model Prompt {
  id        String       @id @default(cuid())
  authorId  String // UWAGA: tylko ID użytkownika, bez relacji!
  title     String       @db.VarChar(100)
  content   String       @db.Text
  isPublic  Boolean      @default(false)
  status    PromptStatus @default(DRAFT)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  catalogs PromptCatalogPrompt[]
}

model PromptCatalog {
  id        String   @id @default(cuid())
  ownerId   String // UWAGA: tylko ID użytkownika, bez relacji!
  name      String   @db.VarChar(100)
  createdAt DateTime @default(now())

  prompts PromptCatalogPrompt[]
}

model PromptCatalogItem {
  id        String   @id @default(cuid())
  catalogId String
  promptId  String
  addedAt   DateTime @default(now())

  @@unique([catalogId, promptId])
}

model PromptCatalogPrompt {
  id        String   @id @default(cuid())
  catalogId String
  promptId  String
  addedAt   DateTime @default(now())

  catalog PromptCatalog @relation(fields: [catalogId], references: [id], onDelete: Cascade)
  prompt  Prompt        @relation(fields: [promptId], references: [id], onDelete: Cascade)

  @@unique([catalogId, promptId])
}

enum PromptStatus {
  DRAFT
  PUBLISHED
}

//===================================================
