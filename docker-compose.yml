version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prompt-hub-network

  # Redis
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - redis_data:/data
    networks:
      - prompt-hub-network

  # Elasticsearch
  elasticsearch:
    image: elasticsearch:8.10.4
    env_file:
      - .env
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - prompt-hub-network

  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "${PORT}:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    depends_on:
      - db
      - redis
      - elasticsearch
    volumes:
      - .:/app
#      - /app/node_modules
    networks:
      - prompt-hub-network

networks:
  prompt-hub-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
